4/19(金)
デフォルト引数
…関数定義時に引数に値を指定することで、デフォルト引数を指定した引数は関数の呼び出した際に引数を指定しなくてもよくなる。

視錐台…カメラの見える範囲

・視錐台のNearクリップとFarクリップの間の空間にあるオブジェクトしか表示されない。

・3D空間における最少単位は「頂点」、頂点3つを結んで1つの「ポリゴン」ができる


4/24(水)
行列とは４×３のfloat変数の集まりであり、「大きさ・回転・位置の全ての情報を１つにまとめたもの」
・ワールド行列…3D空間で座標や拡大率、角度を決める重要な行列

単位行列…世界の中心(0,0)に拡大率1.0で表示する初期化に使われる行列
「Math::Matrix::Identity」と記述して行列に代入できる

DigreeとRadianの違いを意識する

行列合成の順番
    World      =   S(Scale)   * R(Rotation)  * T(Translation)
ワールド行列　＝　拡大行列　×　回転行列　×　座標行列


4/26(金)
回転行列の扱いにおいて、X・Y・Z軸のどの回転なのかをまずははっきりと理解する。

トラッキングカメラ（写す対象を追跡するカメラ）


5/15(水)
「KdCameraクラス」の「SetProjectionMatrix」関数の引数「maxRange」と「minRange」がfarクリップとnearクリップの場所を決める。

・カメラの行列では拡大率は必要なく、上記の引数で描画の距離が変わるため行列合成時になくてもいい。

・ベクトル（方向ベクトル）…力の向きと力の大きさ

・「Normalize」関数…どのような値が入っていようが、約「１」の値にしてくれる関数。

・行列の親子関係…
キャラにカメラがついていくなどの場合、カメラの行列合成の最後にキャラのワールド行列を掛けることでキャラの行列を親行列としてカメラがキャラについていくようになる。


5/17(金)
・ポリモーフィズム…
基底クラスのリストに同じ基底クラスからの派生クラスのポインタを格納することができる。
※リストに格納された派生クラスのポインタで呼び出せる関数は基底クラスで仮想クラスにして、派生クラスでオーバーライドする必要がある。


5/24(金)
KdGameObjectクラスを継承した基底クラスを作って派生クラスに派生させることで、親子関係を作り出し、ポインタを用いて他の派生クラスの値にアクセスすることができる。

・派生元の基底クラスがKdGameObjectクラスを継承している場合、派生先のクラスはKdGameObjectクラスのリストに追加することができる。

・行列の更新時に、元の行列に「＊＝」で合成すると、保持した値に加算されていく。